/* automatically generated by rust-bindgen 0.70.1 */

pub const SECURITY_MAX_SID_STRING_CHARACTERS: u32 = 187;
pub const SECURITY_NULL_RID: u32 = 0;
pub const SECURITY_WORLD_RID: u32 = 0;
pub const SECURITY_LOCAL_RID: u32 = 0;
pub const SECURITY_LOCAL_LOGON_RID: u32 = 1;
pub const SECURITY_CREATOR_OWNER_RID: u32 = 0;
pub const SECURITY_CREATOR_GROUP_RID: u32 = 1;
pub const SECURITY_CREATOR_OWNER_SERVER_RID: u32 = 2;
pub const SECURITY_CREATOR_GROUP_SERVER_RID: u32 = 3;
pub const SECURITY_CREATOR_OWNER_RIGHTS_RID: u32 = 4;
pub const SECURITY_DIALUP_RID: u32 = 1;
pub const SECURITY_NETWORK_RID: u32 = 2;
pub const SECURITY_BATCH_RID: u32 = 3;
pub const SECURITY_INTERACTIVE_RID: u32 = 4;
pub const SECURITY_LOGON_IDS_RID: u32 = 5;
pub const SECURITY_LOGON_IDS_RID_COUNT: u32 = 3;
pub const SECURITY_SERVICE_RID: u32 = 6;
pub const SECURITY_ANONYMOUS_LOGON_RID: u32 = 7;
pub const SECURITY_PROXY_RID: u32 = 8;
pub const SECURITY_ENTERPRISE_CONTROLLERS_RID: u32 = 9;
pub const SECURITY_SERVER_LOGON_RID: u32 = 9;
pub const SECURITY_PRINCIPAL_SELF_RID: u32 = 10;
pub const SECURITY_AUTHENTICATED_USER_RID: u32 = 11;
pub const SECURITY_RESTRICTED_CODE_RID: u32 = 12;
pub const SECURITY_TERMINAL_SERVER_RID: u32 = 13;
pub const SECURITY_REMOTE_LOGON_RID: u32 = 14;
pub const SECURITY_THIS_ORGANIZATION_RID: u32 = 15;
pub const SECURITY_IUSER_RID: u32 = 17;
pub const SECURITY_LOCAL_SYSTEM_RID: u32 = 18;
pub const SECURITY_LOCAL_SERVICE_RID: u32 = 19;
pub const SECURITY_NETWORK_SERVICE_RID: u32 = 20;
pub const SECURITY_NT_NON_UNIQUE: u32 = 21;
pub const SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT: u32 = 3;
pub const SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID: u32 = 22;
pub const SECURITY_BUILTIN_DOMAIN_RID: u32 = 32;
pub const SECURITY_WRITE_RESTRICTED_CODE_RID: u32 = 33;
pub const SECURITY_PACKAGE_BASE_RID: u32 = 64;
pub const SECURITY_PACKAGE_RID_COUNT: u32 = 2;
pub const SECURITY_PACKAGE_NTLM_RID: u32 = 10;
pub const SECURITY_PACKAGE_SCHANNEL_RID: u32 = 14;
pub const SECURITY_PACKAGE_DIGEST_RID: u32 = 21;
pub const SECURITY_CRED_TYPE_BASE_RID: u32 = 65;
pub const SECURITY_CRED_TYPE_RID_COUNT: u32 = 2;
pub const SECURITY_CRED_TYPE_THIS_ORG_CERT_RID: u32 = 1;
pub const SECURITY_MIN_BASE_RID: u32 = 80;
pub const SECURITY_SERVICE_ID_BASE_RID: u32 = 80;
pub const SECURITY_SERVICE_ID_RID_COUNT: u32 = 6;
pub const SECURITY_RESERVED_ID_BASE_RID: u32 = 81;
pub const SECURITY_APPPOOL_ID_BASE_RID: u32 = 82;
pub const SECURITY_APPPOOL_ID_RID_COUNT: u32 = 6;
pub const SECURITY_VIRTUALSERVER_ID_BASE_RID: u32 = 83;
pub const SECURITY_VIRTUALSERVER_ID_RID_COUNT: u32 = 6;
pub const SECURITY_USERMODEDRIVERHOST_ID_BASE_RID: u32 = 84;
pub const SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT: u32 = 6;
pub const SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID: u32 = 85;
pub const SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT: u32 = 6;
pub const SECURITY_WMIHOST_ID_BASE_RID: u32 = 86;
pub const SECURITY_WMIHOST_ID_RID_COUNT: u32 = 6;
pub const SECURITY_TASK_ID_BASE_RID: u32 = 87;
pub const SECURITY_NFS_ID_BASE_RID: u32 = 88;
pub const SECURITY_COM_ID_BASE_RID: u32 = 89;
pub const SECURITY_WINDOW_MANAGER_BASE_RID: u32 = 90;
pub const SECURITY_RDV_GFX_BASE_RID: u32 = 91;
pub const SECURITY_DASHOST_ID_BASE_RID: u32 = 92;
pub const SECURITY_DASHOST_ID_RID_COUNT: u32 = 6;
pub const SECURITY_USERMANAGER_ID_BASE_RID: u32 = 93;
pub const SECURITY_USERMANAGER_ID_RID_COUNT: u32 = 6;
pub const SECURITY_WINRM_ID_BASE_RID: u32 = 94;
pub const SECURITY_WINRM_ID_RID_COUNT: u32 = 6;
pub const SECURITY_CCG_ID_BASE_RID: u32 = 95;
pub const SECURITY_UMFD_BASE_RID: u32 = 96;
pub const SECURITY_VIRTUALACCOUNT_ID_RID_COUNT: u32 = 6;
pub const SECURITY_MAX_BASE_RID: u32 = 111;
pub const SECURITY_MAX_ALWAYS_FILTERED: u32 = 999;
pub const SECURITY_MIN_NEVER_FILTERED: u32 = 1000;
pub const SECURITY_OTHER_ORGANIZATION_RID: u32 = 1000;
pub const SECURITY_WINDOWSMOBILE_ID_BASE_RID: u32 = 112;
pub const SECURITY_INSTALLER_GROUP_CAPABILITY_BASE: u32 = 32;
pub const SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT: u32 = 9;
pub const SECURITY_INSTALLER_CAPABILITY_RID_COUNT: u32 = 10;
pub const SECURITY_LOCAL_ACCOUNT_RID: u32 = 113;
pub const SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID: u32 = 114;
pub const SECURITY_APP_PACKAGE_BASE_RID: u32 = 2;
pub const SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT: u32 = 2;
pub const SECURITY_APP_PACKAGE_RID_COUNT: u32 = 8;
pub const SECURITY_CAPABILITY_BASE_RID: u32 = 3;
pub const SECURITY_CAPABILITY_APP_RID: u32 = 1024;
pub const SECURITY_CAPABILITY_APP_SILO_RID: u32 = 65536;
pub const SECURITY_BUILTIN_CAPABILITY_RID_COUNT: u32 = 2;
pub const SECURITY_CAPABILITY_RID_COUNT: u32 = 5;
pub const SECURITY_PARENT_PACKAGE_RID_COUNT: u32 = 8;
pub const SECURITY_CHILD_PACKAGE_RID_COUNT: u32 = 12;
pub const SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE: u32 = 1;
pub const SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE: u32 = 2;
pub const SECURITY_CAPABILITY_INTERNET_CLIENT: u32 = 1;
pub const SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER: u32 = 2;
pub const SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER: u32 = 3;
pub const SECURITY_CAPABILITY_PICTURES_LIBRARY: u32 = 4;
pub const SECURITY_CAPABILITY_VIDEOS_LIBRARY: u32 = 5;
pub const SECURITY_CAPABILITY_MUSIC_LIBRARY: u32 = 6;
pub const SECURITY_CAPABILITY_DOCUMENTS_LIBRARY: u32 = 7;
pub const SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION: u32 = 8;
pub const SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES: u32 = 9;
pub const SECURITY_CAPABILITY_REMOVABLE_STORAGE: u32 = 10;
pub const SECURITY_CAPABILITY_APPOINTMENTS: u32 = 11;
pub const SECURITY_CAPABILITY_CONTACTS: u32 = 12;
pub const SECURITY_CAPABILITY_INTERNET_EXPLORER: u32 = 4096;
pub const SECURITY_MANDATORY_UNTRUSTED_RID: u32 = 0;
pub const SECURITY_MANDATORY_LOW_RID: u32 = 4096;
pub const SECURITY_MANDATORY_MEDIUM_RID: u32 = 8192;
pub const SECURITY_MANDATORY_MEDIUM_PLUS_RID: u32 = 8448;
pub const SECURITY_MANDATORY_HIGH_RID: u32 = 12288;
pub const SECURITY_MANDATORY_SYSTEM_RID: u32 = 16384;
pub const SECURITY_MANDATORY_PROTECTED_PROCESS_RID: u32 = 20480;
pub const SECURITY_MANDATORY_MAXIMUM_USER_RID: u32 = 16384;
pub const SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT: u32 = 1;
pub const SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID: u32 = 1;
pub const SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID: u32 = 2;
pub const SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID: u32 = 3;
pub const SECURITY_AUTHENTICATION_KEY_TRUST_RID: u32 = 4;
pub const SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID: u32 = 5;
pub const SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID: u32 = 6;
pub const SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT: u32 = 2;
pub const SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID: u32 = 1024;
pub const SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID: u32 = 512;
pub const SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID: u32 = 0;
pub const SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID: u32 = 8192;
pub const SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID: u32 = 4096;
pub const SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID: u32 = 2048;
pub const SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID: u32 = 1536;
pub const SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID: u32 = 1024;
pub const SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID: u32 = 0;
pub const SECURITY_TRUSTED_INSTALLER_RID1: u32 = 956008885;
pub const SECURITY_TRUSTED_INSTALLER_RID2: u32 = 3418522649;
pub const SECURITY_TRUSTED_INSTALLER_RID3: u32 = 1831038044;
pub const SECURITY_TRUSTED_INSTALLER_RID4: u32 = 1853292631;
pub const SECURITY_TRUSTED_INSTALLER_RID5: u32 = 2271478464;
pub const SE_GROUP_MANDATORY: u32 = 1;
pub const SE_GROUP_ENABLED_BY_DEFAULT: u32 = 2;
pub const SE_GROUP_ENABLED: u32 = 4;
pub const SE_GROUP_OWNER: u32 = 8;
pub const SE_GROUP_USE_FOR_DENY_ONLY: u32 = 16;
pub const SE_GROUP_INTEGRITY: u32 = 32;
pub const SE_GROUP_INTEGRITY_ENABLED: u32 = 64;
pub const SE_GROUP_LOGON_ID: u32 = 3221225472;
pub const SE_GROUP_RESOURCE: u32 = 536870912;
pub const SE_GROUP_VALID_ATTRIBUTES: u32 = 3758096511;
pub const SECURITY_DESCRIPTOR_REVISION: u32 = 1;
pub const SECURITY_DESCRIPTOR_REVISION1: u32 = 1;
pub const SE_OWNER_DEFAULTED: u32 = 1;
pub const SE_GROUP_DEFAULTED: u32 = 2;
pub const SE_DACL_PRESENT: u32 = 4;
pub const SE_DACL_DEFAULTED: u32 = 8;
pub const SE_SACL_PRESENT: u32 = 16;
pub const SE_SACL_DEFAULTED: u32 = 32;
pub const SE_DACL_AUTO_INHERIT_REQ: u32 = 256;
pub const SE_SACL_AUTO_INHERIT_REQ: u32 = 512;
pub const SE_DACL_AUTO_INHERITED: u32 = 1024;
pub const SE_SACL_AUTO_INHERITED: u32 = 2048;
pub const SE_DACL_PROTECTED: u32 = 4096;
pub const SE_SACL_PROTECTED: u32 = 8192;
pub const SE_RM_CONTROL_VALID: u32 = 16384;
pub const SE_SELF_RELATIVE: u32 = 32768;
pub const SE_PRIVILEGE_ENABLED_BY_DEFAULT: u32 = 1;
pub const SE_PRIVILEGE_ENABLED: u32 = 2;
pub const SE_PRIVILEGE_REMOVED: u32 = 4;
pub const SE_PRIVILEGE_USED_FOR_ACCESS: u32 = 2147483648;
pub const SE_PRIVILEGE_VALID_ATTRIBUTES: u32 = 2147483655;
pub const SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE: u32 = 1;
pub const SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE: u32 = 2;
pub const SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE: u32 = 4;
pub const SE_SECURITY_DESCRIPTOR_VALID_FLAGS: u32 = 7;
pub const SE_ACCESS_CHECK_FLAG_NO_LEARNING_MODE_LOGGING: u32 = 8;
pub const SE_ACCESS_CHECK_VALID_FLAGS: u32 = 8;
pub const SE_ACTIVATE_AS_USER_CAPABILITY: &[u8; 15] = b"activateAsUser\0";
pub const SE_CONSTRAINED_IMPERSONATION_CAPABILITY: &[u8; 25] = b"constrainedImpersonation\0";
pub const SE_SESSION_IMPERSONATION_CAPABILITY: &[u8; 21] = b"sessionImpersonation\0";
pub const SE_MUMA_CAPABILITY: &[u8; 5] = b"muma\0";
pub const SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY: &[u8; 23] = b"developmentModeNetwork\0";
pub const SE_LEARNING_MODE_LOGGING_CAPABILITY: &[u8; 20] = b"learningModeLogging\0";
pub const SE_PERMISSIVE_LEARNING_MODE_CAPABILITY: &[u8; 23] = b"permissiveLearningMode\0";
pub const SE_APP_SILO_VOLUME_ROOT_MINIMAL_CAPABILITY: &[u8; 32] =
    b"isolatedWin32-volumeRootMinimal\0";
pub const SE_APP_SILO_PROFILES_ROOT_MINIMAL_CAPABILITY: &[u8; 34] =
    b"isolatedWin32-profilesRootMinimal\0";
pub const SE_APP_SILO_USER_PROFILE_MINIMAL_CAPABILITY: &[u8; 33] =
    b"isolatedWin32-userProfileMinimal\0";
pub const SE_APP_SILO_PRINT_CAPABILITY: &[u8; 20] = b"isolatedWin32-print\0";
pub const SECURITY_DYNAMIC_TRACKING: u32 = 1;
pub const SECURITY_STATIC_TRACKING: u32 = 0;
pub const SE_SIGNING_LEVEL_UNCHECKED: u32 = 0;
pub const SE_SIGNING_LEVEL_UNSIGNED: u32 = 1;
pub const SE_SIGNING_LEVEL_ENTERPRISE: u32 = 2;
pub const SE_SIGNING_LEVEL_CUSTOM_1: u32 = 3;
pub const SE_SIGNING_LEVEL_DEVELOPER: u32 = 3;
pub const SE_SIGNING_LEVEL_AUTHENTICODE: u32 = 4;
pub const SE_SIGNING_LEVEL_CUSTOM_2: u32 = 5;
pub const SE_SIGNING_LEVEL_STORE: u32 = 6;
pub const SE_SIGNING_LEVEL_CUSTOM_3: u32 = 7;
pub const SE_SIGNING_LEVEL_ANTIMALWARE: u32 = 7;
pub const SE_SIGNING_LEVEL_MICROSOFT: u32 = 8;
pub const SE_SIGNING_LEVEL_CUSTOM_4: u32 = 9;
pub const SE_SIGNING_LEVEL_CUSTOM_5: u32 = 10;
pub const SE_SIGNING_LEVEL_DYNAMIC_CODEGEN: u32 = 11;
pub const SE_SIGNING_LEVEL_WINDOWS: u32 = 12;
pub const SE_SIGNING_LEVEL_CUSTOM_7: u32 = 13;
pub const SE_SIGNING_LEVEL_WINDOWS_TCB: u32 = 14;
pub const SE_SIGNING_LEVEL_CUSTOM_6: u32 = 15;
pub const SEMAPHORE_MODIFY_STATE: u32 = 2;
pub const SEMAPHORE_ALL_ACCESS: u32 = 2031619;
pub const SECTION_QUERY: u32 = 1;
pub const SECTION_MAP_WRITE: u32 = 2;
pub const SECTION_MAP_READ: u32 = 4;
pub const SECTION_MAP_EXECUTE: u32 = 8;
pub const SECTION_EXTEND_SIZE: u32 = 16;
pub const SECTION_MAP_EXECUTE_EXPLICIT: u32 = 32;
pub const SECTION_ALL_ACCESS: u32 = 983071;
pub const SESSION_QUERY_ACCESS: u32 = 1;
pub const SESSION_MODIFY_ACCESS: u32 = 2;
pub const SESSION_ALL_ACCESS: u32 = 983043;
pub const SEC_HUGE_PAGES: u32 = 131072;
pub const SEC_PARTITION_OWNER_HANDLE: u32 = 262144;
pub const SEC_64K_PAGES: u32 = 524288;
pub const SEC_FILE: u32 = 8388608;
pub const SEC_IMAGE: u32 = 16777216;
pub const SEC_PROTECTED_IMAGE: u32 = 33554432;
pub const SEC_RESERVE: u32 = 67108864;
pub const SEC_COMMIT: u32 = 134217728;
pub const SEC_NOCACHE: u32 = 268435456;
pub const SEC_WRITECOMBINE: u32 = 1073741824;
pub const SEC_LARGE_PAGES: u32 = 2147483648;
pub const SEC_IMAGE_NO_EXECUTE: u32 = 285212672;
pub const SEF_DACL_AUTO_INHERIT: u32 = 1;
pub const SEF_SACL_AUTO_INHERIT: u32 = 2;
pub const SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT: u32 = 4;
pub const SEF_AVOID_PRIVILEGE_CHECK: u32 = 8;
pub const SEF_AVOID_OWNER_CHECK: u32 = 16;
pub const SEF_DEFAULT_OWNER_FROM_PARENT: u32 = 32;
pub const SEF_DEFAULT_GROUP_FROM_PARENT: u32 = 64;
pub const SEF_MACL_NO_WRITE_UP: u32 = 256;
pub const SEF_MACL_NO_READ_UP: u32 = 512;
pub const SEF_MACL_NO_EXECUTE_UP: u32 = 1024;
pub const SEF_AI_USE_EXTRA_PARAMS: u32 = 2048;
pub const SEF_AVOID_OWNER_RESTRICTION: u32 = 4096;
pub const SEF_FORCE_USER_MODE: u32 = 8192;
pub const SEF_NORMALIZE_OUTPUT_DESCRIPTOR: u32 = 16384;
pub const SEF_MACL_VALID_FLAGS: u32 = 1792;
pub const SERVICE_KERNEL_DRIVER: u32 = 1;
pub const SERVICE_FILE_SYSTEM_DRIVER: u32 = 2;
pub const SERVICE_ADAPTER: u32 = 4;
pub const SERVICE_RECOGNIZER_DRIVER: u32 = 8;
pub const SERVICE_DRIVER: u32 = 11;
pub const SERVICE_WIN32_OWN_PROCESS: u32 = 16;
pub const SERVICE_WIN32_SHARE_PROCESS: u32 = 32;
pub const SERVICE_WIN32: u32 = 48;
pub const SERVICE_USER_SERVICE: u32 = 64;
pub const SERVICE_USERSERVICE_INSTANCE: u32 = 128;
pub const SERVICE_USER_SHARE_PROCESS: u32 = 96;
pub const SERVICE_USER_OWN_PROCESS: u32 = 80;
pub const SERVICE_INTERACTIVE_PROCESS: u32 = 256;
pub const SERVICE_PKG_SERVICE: u32 = 512;
pub const SERVICE_TYPE_ALL: u32 = 1023;
pub const SERVICE_BOOT_START: u32 = 0;
pub const SERVICE_SYSTEM_START: u32 = 1;
pub const SERVICE_AUTO_START: u32 = 2;
pub const SERVICE_DEMAND_START: u32 = 3;
pub const SERVICE_DISABLED: u32 = 4;
pub const SERVICE_ERROR_IGNORE: u32 = 0;
pub const SERVICE_ERROR_NORMAL: u32 = 1;
pub const SERVICE_ERROR_SEVERE: u32 = 2;
pub const SERVICE_ERROR_CRITICAL: u32 = 3;
pub const SECURITY_CONTEXT_TRACKING: u32 = 262144;
pub const SECURITY_EFFECTIVE_ONLY: u32 = 524288;
pub const SECURITY_SQOS_PRESENT: u32 = 1048576;
pub const SECURITY_VALID_SQOS_FLAGS: u32 = 2031616;
pub const SETXOFF: u32 = 1;
pub const SETXON: u32 = 2;
pub const SETRTS: u32 = 3;
pub const SETDTR: u32 = 5;
pub const SETBREAK: u32 = 8;
pub const SEM_FAILCRITICALERRORS: u32 = 1;
pub const SEM_NOGPFAULTERRORBOX: u32 = 2;
pub const SEM_NOALIGNMENTFAULTEXCEPT: u32 = 4;
pub const SEM_NOOPENFILEERRORBOX: u32 = 32768;
pub const SET_TAPE_MEDIA_INFORMATION: u32 = 0;
pub const SET_TAPE_DRIVE_INFORMATION: u32 = 1;
pub const SEVERITY_SUCCESS: u32 = 0;
pub const SEVERITY_ERROR: u32 = 1;
pub const SETCOLORTABLE: u32 = 4;
pub const SETABORTPROC: u32 = 9;
pub const SETCOPYCOUNT: u32 = 17;
pub const SELECTPAPERSOURCE: u32 = 18;
pub const SETLINECAP: u32 = 21;
pub const SETLINEJOIN: u32 = 22;
pub const SETMITERLIMIT: u32 = 23;
pub const SETDIBSCALING: u32 = 32;
pub const SETKERNTRACK: u32 = 770;
pub const SETALLJUSTVALUES: u32 = 771;
pub const SETCHARSET: u32 = 772;
pub const SET_ARC_DIRECTION: u32 = 4102;
pub const SET_BACKGROUND_COLOR: u32 = 4103;
pub const SET_POLY_MODE: u32 = 4104;
pub const SET_SCREEN_ANGLE: u32 = 4105;
pub const SET_SPREAD: u32 = 4106;
pub const SET_CLIP_BOX: u32 = 4108;
pub const SET_BOUNDS: u32 = 4109;
pub const SET_MIRROR_MODE: u32 = 4110;
pub const SETICMPROFILE_EMBEDED: u32 = 1;
pub const SERKF_SERIALKEYSON: u32 = 1;
pub const SERKF_AVAILABLE: u32 = 2;
pub const SERKF_INDICATOR: u32 = 4;
pub const SEEK_SET: u32 = 0;
pub const SEEK_CUR: u32 = 1;
pub const SEEK_END: u32 = 2;
pub const SELECTDIB: u32 = 41;
pub const SESSION_ESTABLISHED: u32 = 3;
pub const SESSION_ABORTED: u32 = 6;
pub const SEC_WINNT_AUTH_IDENTITY_ANSI: u32 = 1;
pub const SEC_WINNT_AUTH_IDENTITY_UNICODE: u32 = 2;
pub const SE_ERR_FNF: u32 = 2;
pub const SE_ERR_PNF: u32 = 3;
pub const SE_ERR_ACCESSDENIED: u32 = 5;
pub const SE_ERR_OOM: u32 = 8;
pub const SE_ERR_DLLNOTFOUND: u32 = 32;
pub const SE_ERR_SHARE: u32 = 26;
pub const SE_ERR_ASSOCINCOMPLETE: u32 = 27;
pub const SE_ERR_DDETIMEOUT: u32 = 28;
pub const SE_ERR_DDEFAIL: u32 = 29;
pub const SE_ERR_DDEBUSY: u32 = 30;
pub const SE_ERR_NOASSOC: u32 = 31;
pub const SEE_MASK_DEFAULT: u32 = 0;
pub const SEE_MASK_CLASSNAME: u32 = 1;
pub const SEE_MASK_CLASSKEY: u32 = 3;
pub const SEE_MASK_IDLIST: u32 = 4;
pub const SEE_MASK_INVOKEIDLIST: u32 = 12;
pub const SEE_MASK_HOTKEY: u32 = 32;
pub const SEE_MASK_NOCLOSEPROCESS: u32 = 64;
pub const SEE_MASK_CONNECTNETDRV: u32 = 128;
pub const SEE_MASK_NOASYNC: u32 = 256;
pub const SEE_MASK_FLAG_DDEWAIT: u32 = 256;
pub const SEE_MASK_DOENVSUBST: u32 = 512;
pub const SEE_MASK_FLAG_NO_UI: u32 = 1024;
pub const SEE_MASK_UNICODE: u32 = 16384;
pub const SEE_MASK_NO_CONSOLE: u32 = 32768;
pub const SEE_MASK_ASYNCOK: u32 = 1048576;
pub const SEE_MASK_HMONITOR: u32 = 2097152;
pub const SEE_MASK_NOZONECHECKS: u32 = 8388608;
pub const SEE_MASK_NOQUERYCLASSSTORE: u32 = 16777216;
pub const SEE_MASK_WAITFORINPUTIDLE: u32 = 33554432;
pub const SEE_MASK_FLAG_LOG_USAGE: u32 = 67108864;
pub const SEE_MASK_FLAG_HINST_IS_SITE: u32 = 134217728;
pub const SERIAL_NUMBER_LENGTH: u32 = 32;
pub const SEARCH_ALL: u32 = 0;
pub const SEARCH_PRIMARY: u32 = 1;
pub const SEARCH_ALTERNATE: u32 = 2;
pub const SEARCH_ALL_NO_SEQ: u32 = 4;
pub const SEARCH_PRI_NO_SEQ: u32 = 5;
pub const SEARCH_ALT_NO_SEQ: u32 = 6;
pub const SET_REPAIR_ENABLED: u32 = 1;
pub const SET_REPAIR_WARN_ABOUT_DATA_LOSS: u32 = 8;
pub const SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT: u32 = 16;
pub const SET_REPAIR_VALID_MASK: u32 = 25;
pub const SET_PURGE_FAILURE_MODE_ENABLED: u32 = 1;
pub const SET_PURGE_FAILURE_MODE_DISABLED: u32 = 2;
pub const SERVER_NOTIFY_TYPE: u32 = 2;
pub const SERVER_NOTIFY_FIELD_PRINT_DRIVER_ISOLATION_GROUP: u32 = 0;
pub const SERVER_ACCESS_ADMINISTER: u32 = 1;
pub const SERVER_ACCESS_ENUMERATE: u32 = 2;
pub const SERVER_ALL_ACCESS: u32 = 983043;
pub const SERVER_READ: u32 = 131074;
pub const SERVER_WRITE: u32 = 131075;
pub const SERVER_EXECUTE: u32 = 131074;
pub const SET_FEATURE_ON_THREAD: u32 = 1;
pub const SET_FEATURE_ON_PROCESS: u32 = 2;
pub const SET_FEATURE_IN_REGISTRY: u32 = 4;
pub const SET_FEATURE_ON_THREAD_LOCALMACHINE: u32 = 8;
pub const SET_FEATURE_ON_THREAD_INTRANET: u32 = 16;
pub const SET_FEATURE_ON_THREAD_TRUSTED: u32 = 32;
pub const SET_FEATURE_ON_THREAD_INTERNET: u32 = 64;
pub const SET_FEATURE_ON_THREAD_RESTRICTED: u32 = 128;
pub const SECURITY_IE_STATE_GREEN: u32 = 0;
pub const SECURITY_IE_STATE_RED: u32 = 1;
pub const SETRGBSTRINGA: &[u8; 20] = b"commdlg_SetRGBColor\0";
pub const SETRGBSTRINGW: &[u8; 20] = b"commdlg_SetRGBColor\0";
pub const SETRGBSTRING: &[u8; 20] = b"commdlg_SetRGBColor\0";
pub const SERVICES_ACTIVE_DATABASEW: &[u8; 15] = b"ServicesActive\0";
pub const SERVICES_FAILED_DATABASEW: &[u8; 15] = b"ServicesFailed\0";
pub const SERVICES_ACTIVE_DATABASEA: &[u8; 15] = b"ServicesActive\0";
pub const SERVICES_FAILED_DATABASEA: &[u8; 15] = b"ServicesFailed\0";
pub const SERVICES_ACTIVE_DATABASE: &[u8; 15] = b"ServicesActive\0";
pub const SERVICES_FAILED_DATABASE: &[u8; 15] = b"ServicesFailed\0";
pub const SERVICE_NO_CHANGE: u32 = 4294967295;
pub const SERVICE_ACTIVE: u32 = 1;
pub const SERVICE_INACTIVE: u32 = 2;
pub const SERVICE_STATE_ALL: u32 = 3;
pub const SERVICE_CONTROL_STOP: u32 = 1;
pub const SERVICE_CONTROL_PAUSE: u32 = 2;
pub const SERVICE_CONTROL_CONTINUE: u32 = 3;
pub const SERVICE_CONTROL_INTERROGATE: u32 = 4;
pub const SERVICE_CONTROL_SHUTDOWN: u32 = 5;
pub const SERVICE_CONTROL_PARAMCHANGE: u32 = 6;
pub const SERVICE_CONTROL_NETBINDADD: u32 = 7;
pub const SERVICE_CONTROL_NETBINDREMOVE: u32 = 8;
pub const SERVICE_CONTROL_NETBINDENABLE: u32 = 9;
pub const SERVICE_CONTROL_NETBINDDISABLE: u32 = 10;
pub const SERVICE_CONTROL_DEVICEEVENT: u32 = 11;
pub const SERVICE_CONTROL_HARDWAREPROFILECHANGE: u32 = 12;
pub const SERVICE_CONTROL_POWEREVENT: u32 = 13;
pub const SERVICE_CONTROL_SESSIONCHANGE: u32 = 14;
pub const SERVICE_CONTROL_PRESHUTDOWN: u32 = 15;
pub const SERVICE_CONTROL_TIMECHANGE: u32 = 16;
pub const SERVICE_CONTROL_TRIGGEREVENT: u32 = 32;
pub const SERVICE_CONTROL_LOWRESOURCES: u32 = 96;
pub const SERVICE_CONTROL_SYSTEMLOWRESOURCES: u32 = 97;
pub const SERVICE_STOPPED: u32 = 1;
pub const SERVICE_START_PENDING: u32 = 2;
pub const SERVICE_STOP_PENDING: u32 = 3;
pub const SERVICE_RUNNING: u32 = 4;
pub const SERVICE_CONTINUE_PENDING: u32 = 5;
pub const SERVICE_PAUSE_PENDING: u32 = 6;
pub const SERVICE_PAUSED: u32 = 7;
pub const SERVICE_ACCEPT_STOP: u32 = 1;
pub const SERVICE_ACCEPT_PAUSE_CONTINUE: u32 = 2;
pub const SERVICE_ACCEPT_SHUTDOWN: u32 = 4;
pub const SERVICE_ACCEPT_PARAMCHANGE: u32 = 8;
pub const SERVICE_ACCEPT_NETBINDCHANGE: u32 = 16;
pub const SERVICE_ACCEPT_HARDWAREPROFILECHANGE: u32 = 32;
pub const SERVICE_ACCEPT_POWEREVENT: u32 = 64;
pub const SERVICE_ACCEPT_SESSIONCHANGE: u32 = 128;
pub const SERVICE_ACCEPT_PRESHUTDOWN: u32 = 256;
pub const SERVICE_ACCEPT_TIMECHANGE: u32 = 512;
pub const SERVICE_ACCEPT_TRIGGEREVENT: u32 = 1024;
pub const SERVICE_ACCEPT_USER_LOGOFF: u32 = 2048;
pub const SERVICE_ACCEPT_LOWRESOURCES: u32 = 8192;
pub const SERVICE_ACCEPT_SYSTEMLOWRESOURCES: u32 = 16384;
pub const SERVICE_QUERY_CONFIG: u32 = 1;
pub const SERVICE_CHANGE_CONFIG: u32 = 2;
pub const SERVICE_QUERY_STATUS: u32 = 4;
pub const SERVICE_ENUMERATE_DEPENDENTS: u32 = 8;
pub const SERVICE_START: u32 = 16;
pub const SERVICE_STOP: u32 = 32;
pub const SERVICE_PAUSE_CONTINUE: u32 = 64;
pub const SERVICE_INTERROGATE: u32 = 128;
pub const SERVICE_USER_DEFINED_CONTROL: u32 = 256;
pub const SERVICE_ALL_ACCESS: u32 = 983551;
pub const SERVICE_RUNS_IN_SYSTEM_PROCESS: u32 = 1;
pub const SERVICE_CONFIG_DESCRIPTION: u32 = 1;
pub const SERVICE_CONFIG_FAILURE_ACTIONS: u32 = 2;
pub const SERVICE_CONFIG_DELAYED_AUTO_START_INFO: u32 = 3;
pub const SERVICE_CONFIG_FAILURE_ACTIONS_FLAG: u32 = 4;
pub const SERVICE_CONFIG_SERVICE_SID_INFO: u32 = 5;
pub const SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO: u32 = 6;
pub const SERVICE_CONFIG_PRESHUTDOWN_INFO: u32 = 7;
pub const SERVICE_CONFIG_TRIGGER_INFO: u32 = 8;
pub const SERVICE_CONFIG_PREFERRED_NODE: u32 = 9;
pub const SERVICE_CONFIG_LAUNCH_PROTECTED: u32 = 12;
pub const SERVICE_NOTIFY_STATUS_CHANGE_1: u32 = 1;
pub const SERVICE_NOTIFY_STATUS_CHANGE_2: u32 = 2;
pub const SERVICE_NOTIFY_STATUS_CHANGE: u32 = 2;
pub const SERVICE_NOTIFY_STOPPED: u32 = 1;
pub const SERVICE_NOTIFY_START_PENDING: u32 = 2;
pub const SERVICE_NOTIFY_STOP_PENDING: u32 = 4;
pub const SERVICE_NOTIFY_RUNNING: u32 = 8;
pub const SERVICE_NOTIFY_CONTINUE_PENDING: u32 = 16;
pub const SERVICE_NOTIFY_PAUSE_PENDING: u32 = 32;
pub const SERVICE_NOTIFY_PAUSED: u32 = 64;
pub const SERVICE_NOTIFY_CREATED: u32 = 128;
pub const SERVICE_NOTIFY_DELETED: u32 = 256;
pub const SERVICE_NOTIFY_DELETE_PENDING: u32 = 512;
pub const SERVICE_STOP_REASON_FLAG_MIN: u32 = 0;
pub const SERVICE_STOP_REASON_FLAG_UNPLANNED: u32 = 268435456;
pub const SERVICE_STOP_REASON_FLAG_CUSTOM: u32 = 536870912;
pub const SERVICE_STOP_REASON_FLAG_PLANNED: u32 = 1073741824;
pub const SERVICE_STOP_REASON_FLAG_MAX: u32 = 2147483648;
pub const SERVICE_STOP_REASON_MAJOR_MIN: u32 = 0;
pub const SERVICE_STOP_REASON_MAJOR_OTHER: u32 = 65536;
pub const SERVICE_STOP_REASON_MAJOR_HARDWARE: u32 = 131072;
pub const SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM: u32 = 196608;
pub const SERVICE_STOP_REASON_MAJOR_SOFTWARE: u32 = 262144;
pub const SERVICE_STOP_REASON_MAJOR_APPLICATION: u32 = 327680;
pub const SERVICE_STOP_REASON_MAJOR_NONE: u32 = 393216;
pub const SERVICE_STOP_REASON_MAJOR_MAX: u32 = 458752;
pub const SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM: u32 = 4194304;
pub const SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM: u32 = 16711680;
pub const SERVICE_STOP_REASON_MINOR_MIN: u32 = 0;
pub const SERVICE_STOP_REASON_MINOR_OTHER: u32 = 1;
pub const SERVICE_STOP_REASON_MINOR_MAINTENANCE: u32 = 2;
pub const SERVICE_STOP_REASON_MINOR_INSTALLATION: u32 = 3;
pub const SERVICE_STOP_REASON_MINOR_UPGRADE: u32 = 4;
pub const SERVICE_STOP_REASON_MINOR_RECONFIG: u32 = 5;
pub const SERVICE_STOP_REASON_MINOR_HUNG: u32 = 6;
pub const SERVICE_STOP_REASON_MINOR_UNSTABLE: u32 = 7;
pub const SERVICE_STOP_REASON_MINOR_DISK: u32 = 8;
pub const SERVICE_STOP_REASON_MINOR_NETWORKCARD: u32 = 9;
pub const SERVICE_STOP_REASON_MINOR_ENVIRONMENT: u32 = 10;
pub const SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER: u32 = 11;
pub const SERVICE_STOP_REASON_MINOR_OTHERDRIVER: u32 = 12;
pub const SERVICE_STOP_REASON_MINOR_SERVICEPACK: u32 = 13;
pub const SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE: u32 = 14;
pub const SERVICE_STOP_REASON_MINOR_SECURITYFIX: u32 = 15;
pub const SERVICE_STOP_REASON_MINOR_SECURITY: u32 = 16;
pub const SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY: u32 = 17;
pub const SERVICE_STOP_REASON_MINOR_WMI: u32 = 18;
pub const SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL: u32 = 19;
pub const SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL: u32 = 20;
pub const SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL: u32 = 21;
pub const SERVICE_STOP_REASON_MINOR_MMC: u32 = 22;
pub const SERVICE_STOP_REASON_MINOR_NONE: u32 = 23;
pub const SERVICE_STOP_REASON_MINOR_MEMOTYLIMIT: u32 = 24;
pub const SERVICE_STOP_REASON_MINOR_MAX: u32 = 25;
pub const SERVICE_STOP_REASON_MINOR_MIN_CUSTOM: u32 = 256;
pub const SERVICE_STOP_REASON_MINOR_MAX_CUSTOM: u32 = 65535;
pub const SERVICE_CONTROL_STATUS_REASON_INFO: u32 = 1;
pub const SERVICE_SID_TYPE_NONE: u32 = 0;
pub const SERVICE_SID_TYPE_UNRESTRICTED: u32 = 1;
pub const SERVICE_SID_TYPE_RESTRICTED: u32 = 3;
pub const SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL: u32 = 1;
pub const SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY: u32 = 2;
pub const SERVICE_TRIGGER_TYPE_DOMAIN_JOIN: u32 = 3;
pub const SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT: u32 = 4;
pub const SERVICE_TRIGGER_TYPE_GROUP_POLICY: u32 = 5;
pub const SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT: u32 = 6;
pub const SERVICE_TRIGGER_TYPE_CUSTOM_SYSTEM_STATE_CHANGE: u32 = 7;
pub const SERVICE_TRIGGER_TYPE_CUSTOM: u32 = 20;
pub const SERVICE_TRIGGER_TYPE_AGGREGATE: u32 = 30;
pub const SERVICE_TRIGGER_DATA_TYPE_BINARY: u32 = 1;
pub const SERVICE_TRIGGER_DATA_TYPE_STRING: u32 = 2;
pub const SERVICE_TRIGGER_DATA_TYPE_LEVEL: u32 = 3;
pub const SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY: u32 = 4;
pub const SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL: u32 = 5;
pub const SERVICE_START_REASON_DEMAND: u32 = 1;
pub const SERVICE_START_REASON_AUTO: u32 = 2;
pub const SERVICE_START_REASON_TRIGGER: u32 = 4;
pub const SERVICE_START_REASON_RESTART_ON_FAILURE: u32 = 8;
pub const SERVICE_START_REASON_DELAYEDAUTO: u32 = 16;
pub const SERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON: u32 = 1;
pub const SERVICE_LAUNCH_PROTECTED_NONE: u32 = 0;
pub const SERVICE_LAUNCH_PROTECTED_WINDOWS: u32 = 1;
pub const SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT: u32 = 2;
pub const SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT: u32 = 3;
pub const SERVICE_TRIGGER_ACTION_SERVICE_START: u32 = 1;
pub const SERVICE_TRIGGER_ACTION_SERVICE_STOP: u32 = 2;
pub const SERVICE_TRIGGER_STARTED_ARGUMENT: &[u8; 15] = b"TriggerStarted\0";
pub const SELECT_CAP_CONVERSION: u32 = 1;
pub const SELECT_CAP_SENTENCE: u32 = 2;
pub const SE_AUNIT_TO_KM: f64 = 149597870.7;
pub const SE_AUNIT_TO_LIGHTYEAR: f64 = 0.000015812507409819728;
pub const SE_AUNIT_TO_PARSEC: f64 = 0.000004848136811095274;
pub const SE_JUL_CAL: u32 = 0;
pub const SE_GREG_CAL: u32 = 1;
pub const SE_ECL_NUT: i32 = -1;
pub const SE_SUN: u32 = 0;
pub const SE_MOON: u32 = 1;
pub const SE_MERCURY: u32 = 2;
pub const SE_VENUS: u32 = 3;
pub const SE_MARS: u32 = 4;
pub const SE_JUPITER: u32 = 5;
pub const SE_SATURN: u32 = 6;
pub const SE_URANUS: u32 = 7;
pub const SE_NEPTUNE: u32 = 8;
pub const SE_PLUTO: u32 = 9;
pub const SE_MEAN_NODE: u32 = 10;
pub const SE_TRUE_NODE: u32 = 11;
pub const SE_MEAN_APOG: u32 = 12;
pub const SE_OSCU_APOG: u32 = 13;
pub const SE_EARTH: u32 = 14;
pub const SE_CHIRON: u32 = 15;
pub const SE_PHOLUS: u32 = 16;
pub const SE_CERES: u32 = 17;
pub const SE_PALLAS: u32 = 18;
pub const SE_JUNO: u32 = 19;
pub const SE_VESTA: u32 = 20;
pub const SE_INTP_APOG: u32 = 21;
pub const SE_INTP_PERG: u32 = 22;
pub const SE_NPLANETS: u32 = 23;
pub const SE_PLMOON_OFFSET: u32 = 9000;
pub const SE_AST_OFFSET: u32 = 10000;
pub const SE_VARUNA: u32 = 30000;
pub const SE_FICT_OFFSET: u32 = 40;
pub const SE_FICT_OFFSET_1: u32 = 39;
pub const SE_FICT_MAX: u32 = 999;
pub const SE_NFICT_ELEM: u32 = 15;
pub const SE_COMET_OFFSET: u32 = 1000;
pub const SE_NALL_NAT_POINTS: u32 = 38;
pub const SE_CUPIDO: u32 = 40;
pub const SE_HADES: u32 = 41;
pub const SE_ZEUS: u32 = 42;
pub const SE_KRONOS: u32 = 43;
pub const SE_APOLLON: u32 = 44;
pub const SE_ADMETOS: u32 = 45;
pub const SE_VULKANUS: u32 = 46;
pub const SE_POSEIDON: u32 = 47;
pub const SE_ISIS: u32 = 48;
pub const SE_NIBIRU: u32 = 49;
pub const SE_HARRINGTON: u32 = 50;
pub const SE_NEPTUNE_LEVERRIER: u32 = 51;
pub const SE_NEPTUNE_ADAMS: u32 = 52;
pub const SE_PLUTO_LOWELL: u32 = 53;
pub const SE_PLUTO_PICKERING: u32 = 54;
pub const SE_VULCAN: u32 = 55;
pub const SE_WHITE_MOON: u32 = 56;
pub const SE_PROSERPINA: u32 = 57;
pub const SE_WALDEMATH: u32 = 58;
pub const SE_FIXSTAR: i32 = -10;
pub const SE_ASC: u32 = 0;
pub const SE_MC: u32 = 1;
pub const SE_ARMC: u32 = 2;
pub const SE_VERTEX: u32 = 3;
pub const SE_EQUASC: u32 = 4;
pub const SE_COASC1: u32 = 5;
pub const SE_COASC2: u32 = 6;
pub const SE_POLASC: u32 = 7;
pub const SE_NASCMC: u32 = 8;
pub const SEFLG_JPLEPH: u32 = 1;
pub const SEFLG_SWIEPH: u32 = 2;
pub const SEFLG_MOSEPH: u32 = 4;
pub const SEFLG_HELCTR: u32 = 8;
pub const SEFLG_TRUEPOS: u32 = 16;
pub const SEFLG_J2000: u32 = 32;
pub const SEFLG_NONUT: u32 = 64;
pub const SEFLG_SPEED3: u32 = 128;
pub const SEFLG_SPEED: u32 = 256;
pub const SEFLG_NOGDEFL: u32 = 512;
pub const SEFLG_NOABERR: u32 = 1024;
pub const SEFLG_ASTROMETRIC: u32 = 1536;
pub const SEFLG_EQUATORIAL: u32 = 2048;
pub const SEFLG_XYZ: u32 = 4096;
pub const SEFLG_RADIANS: u32 = 8192;
pub const SEFLG_BARYCTR: u32 = 16384;
pub const SEFLG_TOPOCTR: u32 = 32768;
pub const SEFLG_ORBEL_AA: u32 = 32768;
pub const SEFLG_TROPICAL: u32 = 0;
pub const SEFLG_SIDEREAL: u32 = 65536;
pub const SEFLG_ICRS: u32 = 131072;
pub const SEFLG_DPSIDEPS_1980: u32 = 262144;
pub const SEFLG_JPLHOR: u32 = 262144;
pub const SEFLG_JPLHOR_APPROX: u32 = 524288;
pub const SEFLG_CENTER_BODY: u32 = 1048576;
pub const SEFLG_TEST_PLMOON: u32 = 2228280;
pub const SE_SIDBITS: u32 = 256;
pub const SE_SIDBIT_ECL_T0: u32 = 256;
pub const SE_SIDBIT_SSY_PLANE: u32 = 512;
pub const SE_SIDBIT_USER_UT: u32 = 1024;
pub const SE_SIDBIT_ECL_DATE: u32 = 2048;
pub const SE_SIDBIT_NO_PREC_OFFSET: u32 = 4096;
pub const SE_SIDBIT_PREC_ORIG: u32 = 8192;
pub const SE_SIDM_FAGAN_BRADLEY: u32 = 0;
pub const SE_SIDM_LAHIRI: u32 = 1;
pub const SE_SIDM_DELUCE: u32 = 2;
pub const SE_SIDM_RAMAN: u32 = 3;
pub const SE_SIDM_USHASHASHI: u32 = 4;
pub const SE_SIDM_KRISHNAMURTI: u32 = 5;
pub const SE_SIDM_DJWHAL_KHUL: u32 = 6;
pub const SE_SIDM_YUKTESHWAR: u32 = 7;
pub const SE_SIDM_JN_BHASIN: u32 = 8;
pub const SE_SIDM_BABYL_KUGLER1: u32 = 9;
pub const SE_SIDM_BABYL_KUGLER2: u32 = 10;
pub const SE_SIDM_BABYL_KUGLER3: u32 = 11;
pub const SE_SIDM_BABYL_HUBER: u32 = 12;
pub const SE_SIDM_BABYL_ETPSC: u32 = 13;
pub const SE_SIDM_ALDEBARAN_15TAU: u32 = 14;
pub const SE_SIDM_HIPPARCHOS: u32 = 15;
pub const SE_SIDM_SASSANIAN: u32 = 16;
pub const SE_SIDM_GALCENT_0SAG: u32 = 17;
pub const SE_SIDM_J2000: u32 = 18;
pub const SE_SIDM_J1900: u32 = 19;
pub const SE_SIDM_B1950: u32 = 20;
pub const SE_SIDM_SURYASIDDHANTA: u32 = 21;
pub const SE_SIDM_SURYASIDDHANTA_MSUN: u32 = 22;
pub const SE_SIDM_ARYABHATA: u32 = 23;
pub const SE_SIDM_ARYABHATA_MSUN: u32 = 24;
pub const SE_SIDM_SS_REVATI: u32 = 25;
pub const SE_SIDM_SS_CITRA: u32 = 26;
pub const SE_SIDM_TRUE_CITRA: u32 = 27;
pub const SE_SIDM_TRUE_REVATI: u32 = 28;
pub const SE_SIDM_TRUE_PUSHYA: u32 = 29;
pub const SE_SIDM_GALCENT_RGILBRAND: u32 = 30;
pub const SE_SIDM_GALEQU_IAU1958: u32 = 31;
pub const SE_SIDM_GALEQU_TRUE: u32 = 32;
pub const SE_SIDM_GALEQU_MULA: u32 = 33;
pub const SE_SIDM_GALALIGN_MARDYKS: u32 = 34;
pub const SE_SIDM_TRUE_MULA: u32 = 35;
pub const SE_SIDM_GALCENT_MULA_WILHELM: u32 = 36;
pub const SE_SIDM_ARYABHATA_522: u32 = 37;
pub const SE_SIDM_BABYL_BRITTON: u32 = 38;
pub const SE_SIDM_TRUE_SHEORAN: u32 = 39;
pub const SE_SIDM_GALCENT_COCHRANE: u32 = 40;
pub const SE_SIDM_GALEQU_FIORENZA: u32 = 41;
pub const SE_SIDM_VALENS_MOON: u32 = 42;
pub const SE_SIDM_LAHIRI_1940: u32 = 43;
pub const SE_SIDM_LAHIRI_VP285: u32 = 44;
pub const SE_SIDM_KRISHNAMURTI_VP291: u32 = 45;
pub const SE_SIDM_LAHIRI_ICRC: u32 = 46;
pub const SE_SIDM_USER: u32 = 255;
pub const SE_NSIDM_PREDEF: u32 = 47;
pub const SE_NODBIT_MEAN: u32 = 1;
pub const SE_NODBIT_OSCU: u32 = 2;
pub const SE_NODBIT_OSCU_BAR: u32 = 4;
pub const SE_NODBIT_FOPOINT: u32 = 256;
pub const SEFLG_DEFAULTEPH: u32 = 2;
pub const SE_MAX_STNAME: u32 = 256;
pub const SE_ECL_CENTRAL: u32 = 1;
pub const SE_ECL_NONCENTRAL: u32 = 2;
pub const SE_ECL_TOTAL: u32 = 4;
pub const SE_ECL_ANNULAR: u32 = 8;
pub const SE_ECL_PARTIAL: u32 = 16;
pub const SE_ECL_ANNULAR_TOTAL: u32 = 32;
pub const SE_ECL_HYBRID: u32 = 32;
pub const SE_ECL_PENUMBRAL: u32 = 64;
pub const SE_ECL_ALLTYPES_SOLAR: u32 = 63;
pub const SE_ECL_ALLTYPES_LUNAR: u32 = 84;
pub const SE_ECL_VISIBLE: u32 = 128;
pub const SE_ECL_MAX_VISIBLE: u32 = 256;
pub const SE_ECL_1ST_VISIBLE: u32 = 512;
pub const SE_ECL_PARTBEG_VISIBLE: u32 = 512;
pub const SE_ECL_2ND_VISIBLE: u32 = 1024;
pub const SE_ECL_TOTBEG_VISIBLE: u32 = 1024;
pub const SE_ECL_3RD_VISIBLE: u32 = 2048;
pub const SE_ECL_TOTEND_VISIBLE: u32 = 2048;
pub const SE_ECL_4TH_VISIBLE: u32 = 4096;
pub const SE_ECL_PARTEND_VISIBLE: u32 = 4096;
pub const SE_ECL_PENUMBBEG_VISIBLE: u32 = 8192;
pub const SE_ECL_PENUMBEND_VISIBLE: u32 = 16384;
pub const SE_ECL_OCC_BEG_DAYLIGHT: u32 = 8192;
pub const SE_ECL_OCC_END_DAYLIGHT: u32 = 16384;
pub const SE_ECL_ONE_TRY: u32 = 32768;
pub const SE_CALC_RISE: u32 = 1;
pub const SE_CALC_SET: u32 = 2;
pub const SE_CALC_MTRANSIT: u32 = 4;
pub const SE_CALC_ITRANSIT: u32 = 8;
pub const SE_BIT_DISC_CENTER: u32 = 256;
pub const SE_BIT_DISC_BOTTOM: u32 = 8192;
pub const SE_BIT_GEOCTR_NO_ECL_LAT: u32 = 128;
pub const SE_BIT_NO_REFRACTION: u32 = 512;
pub const SE_BIT_CIVIL_TWILIGHT: u32 = 1024;
pub const SE_BIT_NAUTIC_TWILIGHT: u32 = 2048;
pub const SE_BIT_ASTRO_TWILIGHT: u32 = 4096;
pub const SE_BIT_FIXED_DISC_SIZE: u32 = 16384;
pub const SE_BIT_FORCE_SLOW_METHOD: u32 = 32768;
pub const SE_BIT_HINDU_RISING: u32 = 896;
pub const SE_ECL2HOR: u32 = 0;
pub const SE_EQU2HOR: u32 = 1;
pub const SE_HOR2ECL: u32 = 0;
pub const SE_HOR2EQU: u32 = 1;
pub const SE_TRUE_TO_APP: u32 = 0;
pub const SE_APP_TO_TRUE: u32 = 1;
pub const SE_DE_NUMBER: u32 = 431;
pub const SE_FNAME_DE200: &[u8; 10] = b"de200.eph\0";
pub const SE_FNAME_DE403: &[u8; 10] = b"de403.eph\0";
pub const SE_FNAME_DE404: &[u8; 10] = b"de404.eph\0";
pub const SE_FNAME_DE405: &[u8; 10] = b"de405.eph\0";
pub const SE_FNAME_DE406: &[u8; 10] = b"de406.eph\0";
pub const SE_FNAME_DE431: &[u8; 10] = b"de431.eph\0";
pub const SE_FNAME_DFT: &[u8; 10] = b"de431.eph\0";
pub const SE_FNAME_DFT2: &[u8; 10] = b"de406.eph\0";
pub const SE_STARFILE_OLD: &[u8; 13] = b"fixstars.cat\0";
pub const SE_STARFILE: &[u8; 13] = b"sefstars.txt\0";
pub const SE_ASTNAMFILE: &[u8; 12] = b"seasnam.txt\0";
pub const SE_FICTFILE: &[u8; 12] = b"seorbel.txt\0";
pub const SE_EPHE_PATH: &[u8; 13] = b"\\sweph\\ephe\\\0";
pub const SE_SPLIT_DEG_ROUND_SEC: u32 = 1;
pub const SE_SPLIT_DEG_ROUND_MIN: u32 = 2;
pub const SE_SPLIT_DEG_ROUND_DEG: u32 = 4;
pub const SE_SPLIT_DEG_ZODIACAL: u32 = 8;
pub const SE_SPLIT_DEG_NAKSHATRA: u32 = 1024;
pub const SE_SPLIT_DEG_KEEP_SIGN: u32 = 16;
pub const SE_SPLIT_DEG_KEEP_DEG: u32 = 32;
pub const SE_HELIACAL_RISING: u32 = 1;
pub const SE_HELIACAL_SETTING: u32 = 2;
pub const SE_MORNING_FIRST: u32 = 1;
pub const SE_EVENING_LAST: u32 = 2;
pub const SE_EVENING_FIRST: u32 = 3;
pub const SE_MORNING_LAST: u32 = 4;
pub const SE_ACRONYCHAL_RISING: u32 = 5;
pub const SE_ACRONYCHAL_SETTING: u32 = 6;
pub const SE_COSMICAL_SETTING: u32 = 6;
pub const SE_HELFLAG_LONG_SEARCH: u32 = 128;
pub const SE_HELFLAG_HIGH_PRECISION: u32 = 256;
pub const SE_HELFLAG_OPTICAL_PARAMS: u32 = 512;
pub const SE_HELFLAG_NO_DETAILS: u32 = 1024;
pub const SE_HELFLAG_SEARCH_1_PERIOD: u32 = 2048;
pub const SE_HELFLAG_VISLIM_DARK: u32 = 4096;
pub const SE_HELFLAG_VISLIM_NOMOON: u32 = 8192;
pub const SE_HELFLAG_VISLIM_PHOTOPIC: u32 = 16384;
pub const SE_HELFLAG_VISLIM_SCOTOPIC: u32 = 32768;
pub const SE_HELFLAG_AV: u32 = 65536;
pub const SE_HELFLAG_AVKIND_VR: u32 = 65536;
pub const SE_HELFLAG_AVKIND_PTO: u32 = 131072;
pub const SE_HELFLAG_AVKIND_MIN7: u32 = 262144;
pub const SE_HELFLAG_AVKIND_MIN9: u32 = 524288;
pub const SE_HELFLAG_AVKIND: u32 = 983040;
pub const SE_PHOTOPIC_FLAG: u32 = 0;
pub const SE_SCOTOPIC_FLAG: u32 = 1;
pub const SE_MIXEDOPIC_FLAG: u32 = 2;
pub const SE_TIDAL_DE200: f64 = -23.8946;
pub const SE_TIDAL_DE403: f64 = -25.58;
pub const SE_TIDAL_DE404: f64 = -25.58;
pub const SE_TIDAL_DE405: f64 = -25.826;
pub const SE_TIDAL_DE406: f64 = -25.826;
pub const SE_TIDAL_DE421: f64 = -25.85;
pub const SE_TIDAL_DE422: f64 = -25.85;
pub const SE_TIDAL_DE430: f64 = -25.82;
pub const SE_TIDAL_DE431: f64 = -25.8;
pub const SE_TIDAL_DE441: f64 = -25.936;
pub const SE_TIDAL_26: f64 = -26.0;
pub const SE_TIDAL_STEPHENSON_2016: f64 = -25.85;
pub const SE_TIDAL_DEFAULT: f64 = -25.8;
pub const SE_TIDAL_AUTOMATIC: u32 = 999999;
pub const SE_TIDAL_MOSEPH: f64 = -25.58;
pub const SE_TIDAL_SWIEPH: f64 = -25.8;
pub const SE_TIDAL_JPLEPH: f64 = -25.8;
pub const SE_DELTAT_AUTOMATIC: f64 = -0.0000000001;
pub const SE_MODEL_DELTAT: u32 = 0;
pub const SE_MODEL_PREC_LONGTERM: u32 = 1;
pub const SE_MODEL_PREC_SHORTTERM: u32 = 2;
pub const SE_MODEL_NUT: u32 = 3;
pub const SE_MODEL_BIAS: u32 = 4;
pub const SE_MODEL_JPLHOR_MODE: u32 = 5;
pub const SE_MODEL_JPLHORA_MODE: u32 = 6;
pub const SE_MODEL_SIDT: u32 = 7;
pub const SEMOD_NPREC: u32 = 11;
pub const SEMOD_PREC_IAU_1976: u32 = 1;
pub const SEMOD_PREC_LASKAR_1986: u32 = 2;
pub const SEMOD_PREC_WILL_EPS_LASK: u32 = 3;
pub const SEMOD_PREC_WILLIAMS_1994: u32 = 4;
pub const SEMOD_PREC_SIMON_1994: u32 = 5;
pub const SEMOD_PREC_IAU_2000: u32 = 6;
pub const SEMOD_PREC_BRETAGNON_2003: u32 = 7;
pub const SEMOD_PREC_IAU_2006: u32 = 8;
pub const SEMOD_PREC_VONDRAK_2011: u32 = 9;
pub const SEMOD_PREC_OWEN_1990: u32 = 10;
pub const SEMOD_PREC_NEWCOMB: u32 = 11;
pub const SEMOD_PREC_DEFAULT: u32 = 9;
pub const SEMOD_PREC_DEFAULT_SHORT: u32 = 9;
pub const SEMOD_NNUT: u32 = 5;
pub const SEMOD_NUT_IAU_1980: u32 = 1;
pub const SEMOD_NUT_IAU_CORR_1987: u32 = 2;
pub const SEMOD_NUT_IAU_2000A: u32 = 3;
pub const SEMOD_NUT_IAU_2000B: u32 = 4;
pub const SEMOD_NUT_WOOLARD: u32 = 5;
pub const SEMOD_NUT_DEFAULT: u32 = 4;
pub const SEMOD_NSIDT: u32 = 4;
pub const SEMOD_SIDT_IAU_1976: u32 = 1;
pub const SEMOD_SIDT_IAU_2006: u32 = 2;
pub const SEMOD_SIDT_IERS_CONV_2010: u32 = 3;
pub const SEMOD_SIDT_LONGTERM: u32 = 4;
pub const SEMOD_SIDT_DEFAULT: u32 = 4;
pub const SEMOD_NBIAS: u32 = 3;
pub const SEMOD_BIAS_NONE: u32 = 1;
pub const SEMOD_BIAS_IAU2000: u32 = 2;
pub const SEMOD_BIAS_IAU2006: u32 = 3;
pub const SEMOD_BIAS_DEFAULT: u32 = 3;
pub const SEMOD_NJPLHOR: u32 = 2;
pub const SEMOD_JPLHOR_LONG_AGREEMENT: u32 = 1;
pub const SEMOD_JPLHOR_DEFAULT: u32 = 1;
pub const SEMOD_NJPLHORA: u32 = 3;
pub const SEMOD_JPLHORA_1: u32 = 1;
pub const SEMOD_JPLHORA_2: u32 = 2;
pub const SEMOD_JPLHORA_3: u32 = 3;
pub const SEMOD_JPLHORA_DEFAULT: u32 = 3;
pub const SEMOD_NDELTAT: u32 = 5;
pub const SEMOD_DELTAT_STEPHENSON_MORRISON_1984: u32 = 1;
pub const SEMOD_DELTAT_STEPHENSON_1997: u32 = 2;
pub const SEMOD_DELTAT_STEPHENSON_MORRISON_2004: u32 = 3;
pub const SEMOD_DELTAT_ESPENAK_MEEUS_2006: u32 = 4;
pub const SEMOD_DELTAT_STEPHENSON_ETC_2016: u32 = 5;
pub const SEMOD_DELTAT_DEFAULT: u32 = 5;
pub type int32 = ::std::os::raw::c_int;
pub type AS_BOOL = ::std::os::raw::c_int;
pub type centisec = int32;
extern "C" {
    pub fn swe_heliacal_ut(
        tjdstart_ut: f64,
        geopos: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        ObjectName: *mut ::std::os::raw::c_char,
        TypeEvent: int32,
        iflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_heliacal_pheno_ut(
        tjd_ut: f64,
        geopos: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        ObjectName: *mut ::std::os::raw::c_char,
        TypeEvent: int32,
        helflag: int32,
        darr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_vis_limit_mag(
        tjdut: f64,
        geopos: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        ObjectName: *mut ::std::os::raw::c_char,
        helflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_heliacal_angle(
        tjdut: f64,
        dgeo: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        helflag: int32,
        mag: f64,
        azi_obj: f64,
        azi_sun: f64,
        azi_moon: f64,
        alt_moon: f64,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_topo_arcus_visionis(
        tjdut: f64,
        dgeo: *mut f64,
        datm: *mut f64,
        dobs: *mut f64,
        helflag: int32,
        mag: f64,
        azi_obj: f64,
        alt_obj: f64,
        azi_sun: f64,
        azi_moon: f64,
        alt_moon: f64,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_set_astro_models(samod: *mut ::std::os::raw::c_char, iflag: int32);
}
extern "C" {
    pub fn swe_get_astro_models(
        samod: *mut ::std::os::raw::c_char,
        sdet: *mut ::std::os::raw::c_char,
        iflag: int32,
    );
}
extern "C" {
    #[doc = " exports from sweph.c"]
    pub fn swe_version(arg1: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn swe_get_library_path(arg1: *mut ::std::os::raw::c_char) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn swe_calc(
        tjd: f64,
        ipl: ::std::os::raw::c_int,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_calc_ut(
        tjd_ut: f64,
        ipl: int32,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_calc_pctr(
        tjd: f64,
        ipl: int32,
        iplctr: int32,
        iflag: int32,
        xxret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_solcross(
        x2cross: f64,
        jd_et: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_solcross_ut(
        x2cross: f64,
        jd_ut: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_mooncross(
        x2cross: f64,
        jd_et: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_mooncross_ut(
        x2cross: f64,
        jd_ut: f64,
        flag: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_mooncross_node(
        jd_et: f64,
        flag: int32,
        xlon: *mut f64,
        xlat: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_mooncross_node_ut(
        jd_ut: f64,
        flag: int32,
        xlon: *mut f64,
        xlat: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_helio_cross(
        ipl: int32,
        x2cross: f64,
        jd_et: f64,
        iflag: int32,
        dir: int32,
        jd_cross: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_helio_cross_ut(
        ipl: int32,
        x2cross: f64,
        jd_ut: f64,
        iflag: int32,
        dir: int32,
        jd_cross: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_fixstar(
        star: *mut ::std::os::raw::c_char,
        tjd: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_fixstar_ut(
        star: *mut ::std::os::raw::c_char,
        tjd_ut: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_fixstar_mag(
        star: *mut ::std::os::raw::c_char,
        mag: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_fixstar2(
        star: *mut ::std::os::raw::c_char,
        tjd: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_fixstar2_ut(
        star: *mut ::std::os::raw::c_char,
        tjd_ut: f64,
        iflag: int32,
        xx: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_fixstar2_mag(
        star: *mut ::std::os::raw::c_char,
        mag: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_close();
}
extern "C" {
    pub fn swe_set_ephe_path(path: *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn swe_set_jpl_file(fname: *mut ::std::os::raw::c_char);
}
extern "C" {
    pub fn swe_get_planet_name(
        ipl: ::std::os::raw::c_int,
        spname: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn swe_set_topo(geolon: f64, geolat: f64, geoalt: f64);
}
extern "C" {
    pub fn swe_set_sid_mode(sid_mode: int32, t0: f64, ayan_t0: f64);
}
extern "C" {
    pub fn swe_get_ayanamsa_ex(
        tjd_et: f64,
        iflag: int32,
        daya: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_get_ayanamsa_ex_ut(
        tjd_ut: f64,
        iflag: int32,
        daya: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_get_ayanamsa(tjd_et: f64) -> f64;
}
extern "C" {
    pub fn swe_get_ayanamsa_ut(tjd_ut: f64) -> f64;
}
extern "C" {
    pub fn swe_get_ayanamsa_name(isidmode: int32) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn swe_get_current_file_data(
        ifno: ::std::os::raw::c_int,
        tfstart: *mut f64,
        tfend: *mut f64,
        denum: *mut ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    #[doc = " exports from swedate.c"]
    pub fn swe_date_conversion(
        y: ::std::os::raw::c_int,
        m: ::std::os::raw::c_int,
        d: ::std::os::raw::c_int,
        utime: f64,
        c: ::std::os::raw::c_char,
        tjd: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_julday(
        year: ::std::os::raw::c_int,
        month: ::std::os::raw::c_int,
        day: ::std::os::raw::c_int,
        hour: f64,
        gregflag: ::std::os::raw::c_int,
    ) -> f64;
}
extern "C" {
    pub fn swe_revjul(
        jd: f64,
        gregflag: ::std::os::raw::c_int,
        jyear: *mut ::std::os::raw::c_int,
        jmon: *mut ::std::os::raw::c_int,
        jday: *mut ::std::os::raw::c_int,
        jut: *mut f64,
    );
}
extern "C" {
    pub fn swe_utc_to_jd(
        iyear: int32,
        imonth: int32,
        iday: int32,
        ihour: int32,
        imin: int32,
        dsec: f64,
        gregflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_jdet_to_utc(
        tjd_et: f64,
        gregflag: int32,
        iyear: *mut int32,
        imonth: *mut int32,
        iday: *mut int32,
        ihour: *mut int32,
        imin: *mut int32,
        dsec: *mut f64,
    );
}
extern "C" {
    pub fn swe_jdut1_to_utc(
        tjd_ut: f64,
        gregflag: int32,
        iyear: *mut int32,
        imonth: *mut int32,
        iday: *mut int32,
        ihour: *mut int32,
        imin: *mut int32,
        dsec: *mut f64,
    );
}
extern "C" {
    pub fn swe_utc_time_zone(
        iyear: int32,
        imonth: int32,
        iday: int32,
        ihour: int32,
        imin: int32,
        dsec: f64,
        d_timezone: f64,
        iyear_out: *mut int32,
        imonth_out: *mut int32,
        iday_out: *mut int32,
        ihour_out: *mut int32,
        imin_out: *mut int32,
        dsec_out: *mut f64,
    );
}
extern "C" {
    #[doc = " exports from swehouse.c"]
    pub fn swe_houses(
        tjd_ut: f64,
        geolat: f64,
        geolon: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_houses_ex(
        tjd_ut: f64,
        iflag: int32,
        geolat: f64,
        geolon: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_houses_ex2(
        tjd_ut: f64,
        iflag: int32,
        geolat: f64,
        geolon: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
        cusp_speed: *mut f64,
        ascmc_speed: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_houses_armc(
        armc: f64,
        geolat: f64,
        eps: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_houses_armc_ex2(
        armc: f64,
        geolat: f64,
        eps: f64,
        hsys: ::std::os::raw::c_int,
        cusps: *mut f64,
        ascmc: *mut f64,
        cusp_speed: *mut f64,
        ascmc_speed: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_house_pos(
        armc: f64,
        geolat: f64,
        eps: f64,
        hsys: ::std::os::raw::c_int,
        xpin: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn swe_house_name(hsys: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    #[doc = " exports from swecl.c"]
    pub fn swe_gauquelin_sector(
        t_ut: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        iflag: int32,
        imeth: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        dgsect: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_sol_eclipse_where(
        tjd: f64,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lun_occult_where(
        tjd: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_sol_eclipse_how(
        tjd: f64,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_sol_eclipse_when_loc(
        tjd_start: f64,
        ifl: int32,
        geopos: *mut f64,
        tret: *mut f64,
        attr: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lun_occult_when_loc(
        tjd_start: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        ifl: int32,
        geopos: *mut f64,
        tret: *mut f64,
        attr: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_sol_eclipse_when_glob(
        tjd_start: f64,
        ifl: int32,
        ifltype: int32,
        tret: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lun_occult_when_glob(
        tjd_start: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        ifl: int32,
        ifltype: int32,
        tret: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lun_eclipse_how(
        tjd_ut: f64,
        ifl: int32,
        geopos: *mut f64,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lun_eclipse_when(
        tjd_start: f64,
        ifl: int32,
        ifltype: int32,
        tret: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lun_eclipse_when_loc(
        tjd_start: f64,
        ifl: int32,
        geopos: *mut f64,
        tret: *mut f64,
        attr: *mut f64,
        backward: int32,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_pheno(
        tjd: f64,
        ipl: int32,
        iflag: int32,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_pheno_ut(
        tjd_ut: f64,
        ipl: int32,
        iflag: int32,
        attr: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_refrac(inalt: f64, atpress: f64, attemp: f64, calc_flag: int32) -> f64;
}
extern "C" {
    pub fn swe_refrac_extended(
        inalt: f64,
        geoalt: f64,
        atpress: f64,
        attemp: f64,
        lapse_rate: f64,
        calc_flag: int32,
        dret: *mut f64,
    ) -> f64;
}
extern "C" {
    pub fn swe_set_lapse_rate(lapse_rate: f64);
}
extern "C" {
    pub fn swe_azalt(
        tjd_ut: f64,
        calc_flag: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        xin: *mut f64,
        xaz: *mut f64,
    );
}
extern "C" {
    pub fn swe_azalt_rev(
        tjd_ut: f64,
        calc_flag: int32,
        geopos: *mut f64,
        xin: *mut f64,
        xout: *mut f64,
    );
}
extern "C" {
    pub fn swe_rise_trans_true_hor(
        tjd_ut: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        epheflag: int32,
        rsmi: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        horhgt: f64,
        tret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_rise_trans(
        tjd_ut: f64,
        ipl: int32,
        starname: *mut ::std::os::raw::c_char,
        epheflag: int32,
        rsmi: int32,
        geopos: *mut f64,
        atpress: f64,
        attemp: f64,
        tret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_nod_aps(
        tjd_et: f64,
        ipl: int32,
        iflag: int32,
        method: int32,
        xnasc: *mut f64,
        xndsc: *mut f64,
        xperi: *mut f64,
        xaphe: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_nod_aps_ut(
        tjd_ut: f64,
        ipl: int32,
        iflag: int32,
        method: int32,
        xnasc: *mut f64,
        xndsc: *mut f64,
        xperi: *mut f64,
        xaphe: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_get_orbital_elements(
        tjd_et: f64,
        ipl: int32,
        iflag: int32,
        dret: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_orbit_max_min_true_distance(
        tjd_et: f64,
        ipl: int32,
        iflag: int32,
        dmax: *mut f64,
        dmin: *mut f64,
        dtrue: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    #[doc = " exports from swephlib.c"]
    pub fn swe_deltat(tjd: f64) -> f64;
}
extern "C" {
    pub fn swe_deltat_ex(tjd: f64, iflag: int32, serr: *mut ::std::os::raw::c_char) -> f64;
}
extern "C" {
    pub fn swe_time_equ(tjd: f64, te: *mut f64, serr: *mut ::std::os::raw::c_char) -> int32;
}
extern "C" {
    pub fn swe_lmt_to_lat(
        tjd_lmt: f64,
        geolon: f64,
        tjd_lat: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_lat_to_lmt(
        tjd_lat: f64,
        geolon: f64,
        tjd_lmt: *mut f64,
        serr: *mut ::std::os::raw::c_char,
    ) -> int32;
}
extern "C" {
    pub fn swe_sidtime0(tjd_ut: f64, eps: f64, nut: f64) -> f64;
}
extern "C" {
    pub fn swe_sidtime(tjd_ut: f64) -> f64;
}
extern "C" {
    pub fn swe_set_interpolate_nut(do_interpolate: AS_BOOL);
}
extern "C" {
    pub fn swe_cotrans(xpo: *mut f64, xpn: *mut f64, eps: f64);
}
extern "C" {
    pub fn swe_cotrans_sp(xpo: *mut f64, xpn: *mut f64, eps: f64);
}
extern "C" {
    pub fn swe_get_tid_acc() -> f64;
}
extern "C" {
    pub fn swe_set_tid_acc(t_acc: f64);
}
extern "C" {
    pub fn swe_set_delta_t_userdef(dt: f64);
}
extern "C" {
    pub fn swe_degnorm(x: f64) -> f64;
}
extern "C" {
    pub fn swe_radnorm(x: f64) -> f64;
}
extern "C" {
    pub fn swe_rad_midp(x1: f64, x0: f64) -> f64;
}
extern "C" {
    pub fn swe_deg_midp(x1: f64, x0: f64) -> f64;
}
extern "C" {
    pub fn swe_split_deg(
        ddeg: f64,
        roundflag: int32,
        ideg: *mut int32,
        imin: *mut int32,
        isec: *mut int32,
        dsecfr: *mut f64,
        isgn: *mut int32,
    );
}
extern "C" {
    #[doc = " other functions from swephlib.c;\n they are not needed for Swiss Ephemeris,\n but may be useful to former Placalc users."]
    pub fn swe_csnorm(p: centisec) -> centisec;
}
extern "C" {
    pub fn swe_difcsn(p1: centisec, p2: centisec) -> centisec;
}
extern "C" {
    pub fn swe_difdegn(p1: f64, p2: f64) -> f64;
}
extern "C" {
    pub fn swe_difcs2n(p1: centisec, p2: centisec) -> centisec;
}
extern "C" {
    pub fn swe_difdeg2n(p1: f64, p2: f64) -> f64;
}
extern "C" {
    pub fn swe_difrad2n(p1: f64, p2: f64) -> f64;
}
extern "C" {
    pub fn swe_csroundsec(x: centisec) -> centisec;
}
extern "C" {
    pub fn swe_d2l(x: f64) -> int32;
}
extern "C" {
    pub fn swe_day_of_week(jd: f64) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn swe_cs2timestr(
        t: centisec,
        sep: ::std::os::raw::c_int,
        suppressZero: AS_BOOL,
        a: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn swe_cs2lonlatstr(
        t: centisec,
        pchar: ::std::os::raw::c_char,
        mchar: ::std::os::raw::c_char,
        s: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn swe_cs2degstr(
        t: centisec,
        a: *mut ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
